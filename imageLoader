#!/bin/bash
# Fri, 10.07.2020
# jaejun.lee.1991@gmail.com

loader_dir=$(pwd -P)
. ${loader_dir}/loader.config

function check_env() {

  if [ $(docker images | awk '{print $2}' | grep "<none>" | wc -l) -ne 0 ];then
    echo "[ERROR] You should delete image having <none> tag! exists $(docker images | awk '{print $2}' | grep "<none>" | wc -l) <none> tag image.."
    exit 1
  fi

}

function check_registry() {

  if [[ -z ${docker_registry} ]]; then
    echo "[ERROR] You must set docker_registry in loader.config file!"
    exit 1
  else
    echo "[INFO] Set docker_registry: $docker_registry"
  fi

}

function pull_images() {

  mkdir -p ${loader_dir}/archive
  image_list=${loader_dir}/.imageList
  repo_list=$(awk '{print $1}' ${image_list})
  for repo in $repo_list;do
      name=${repo%:*}
      version=${repo##*:}
      echo "[ REPO ] $repo" | grep "REPO" --color
      docker pull $repo
      docker save $repo > "${loader_dir}/archive/${repo##*/}.tar"
      docker rmi -f $repo
  done

  image_list=${loader_dir}/.imageListHash
  repo_list=$(awk '{print $1}' ${image_list})
  for repo in $repo_list;do
      name=${repo%@sha256:*}
      version=${repo##*:}
      echo "[ REPO ] $repo" | grep "REPO" --color
      docker pull $repo && sleep 5s
      imageId=$(docker images | grep "<none>" | awk '{print $3}')
      echo "[ IMAGE-ID ] $imageId" | grep "IMAGE_ID" --color
      docker tag $imageId ${name}:${version}
      docker save ${name}:${version} > "${loader_dir}/archive/${repo##*/}.tar"
      docker rmi -f $imageId
  done

}

function push_images() {

  image_list=${loader_dir}/.imageList
  repo_list=$(awk '{print $1}' ${image_list})
  for repo in $repo_list;do
      echo "[PUSH IMAGE] $repo" | grep "PUSH IMAGE" --color
      image_name=${repo##*/}
      docker load < "${loader_dir}/archive/${image_name/%:/_}.tar"
      docker tag ${repo} ${docker_registry}/${repo}
      docker push ${docker_registry}/${repo}
      docker rmi -f ${repo} ${docker_registry}/${repo}
  done

  image_list=${loader_dir}/.imageListHash
  repo_list=$(awk '{print $1}' ${image_list})
  for repo in $repo_list;do
    name=${repo%@sha256:*}
    version=${repo##*:}
    echo "[PUSH IMAGE] $repo" | grep "PUSH IMAGE" --color
    docker load < "${loader_dir}/archive/${repo##*/}.tar"
    docker tag ${name}:${version} ${docker_registry}/${name}:${version}
    docker push ${docker_registry}/${name}:${version}
    docker rmi -f ${name}:${version} ${docker_registry}/${name}:${version}
done

}

function main() {

  case "${1:-}" in
  pull)
    check_env
    pull_images
    ;;
  push)
    check_env
    check_registry
    push_images
    ;;
  *)
    set +x
    echo "usage:" >&2
    echo "    $0 pull" >&2
    echo "    $0 push" >&2
    ;;
  esac
}

main $1
